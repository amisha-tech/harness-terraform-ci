{
  "version": 4,
  "terraform_version": "1.6.4",
  "serial": 2,
  "lineage": "e8412e87-b7e1-5098-b0e6-eb8127ccc152",
  "outputs": {
    "myoutput": {
      "value": "autobasecipipeline",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "harness_platform_pipeline",
      "name": "autopipeline",
      "provider": "provider[\"registry.terraform.io/harness/harness\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "",
            "git_details": null,
            "git_import_info": [],
            "id": "autobasecipipeline",
            "identifier": "autobasecipipeline",
            "import_from_git": null,
            "name": "autobasecipipeline",
            "org_id": "InstructorLedTraining",
            "pipeline_import_request": [],
            "project_id": "studenta5acefbaa4",
            "tags": null,
            "template_applied": false,
            "template_applied_pipeline_yaml": "",
            "yaml": "pipeline:\n  name: autobasecipipeline\n  identifier: autobasecipipeline\n  projectIdentifier: studenta5acefbaa4\n  orgIdentifier: InstructorLedTraining\n  tags: {}\n  stages:\n    - stage:\n        name: mybuild\n        identifier: mybuild\n        description: \"\"\n        type: CI\n        spec:\n          cloneCodebase: false\n          platform:\n            os: Linux\n            arch: Amd64\n          runtime:\n            type: Cloud\n            spec: {}\n          execution:\n            steps:\n              - step:\n                  type: Run\n                  name: myclonerepo\n                  identifier: myclonerepo\n                  spec:\n                    shell: Sh\n                    command: echo \"Clone Git Repo on $(uname -a)\"\n              - step:\n                  type: Run\n                  name: mycompilecode\n                  identifier: mycompilecode\n                  spec:\n                    shell: Sh\n                    command: echo \"Compile Code on $(uname -a)\"\n              - step:\n                  type: Run\n                  name: myrununittest\n                  identifier: myrununittest\n                  spec:\n                    shell: Sh\n                    command: echo \"Run Unit Tests\"\n              - step:\n                  type: Run\n                  name: mycheckcodequality\n                  identifier: mycheckcodequality\n                  spec:\n                    shell: Sh\n                    command: echo \"Check Code Quality\"\n              - step:\n                  type: Run\n                  name: myscansecrets\n                  identifier: myscansecrets\n                  spec:\n                    shell: Sh\n                    command: echo \"Scan for Leaked Secrets\"\n              - step:\n                  type: Run\n                  name: myscancodevulnerabilities\n                  identifier: myscancodevulnerabilities\n                  spec:\n                    shell: Sh\n                    command: echo \"Scan for Code Vulnerabilities\"\n              - step:\n                  type: Run\n                  name: myscansca\n                  identifier: myscansca\n                  spec:\n                    shell: Sh\n                    command: echo \"Perform Software Composition Analysis (SCA) Scan\"\n              - step:\n                  type: Run\n                  name: mybuildpackage\n                  identifier: mybuildpackage\n                  spec:\n                    shell: Sh\n                    command: echo \"Build Package\"\n              - step:\n                  type: Run\n                  name: mypublishpackage\n                  identifier: mypublishpackage\n                  spec:\n                    shell: Sh\n                    command: echo \"Publish Package to Artifact Repository\"\n              - step:\n                  type: Run\n                  name: mybuildcontainerimage\n                  identifier: mybuildcontainerimage\n                  spec:\n                    shell: Sh\n                    command: echo \"Build Container Image\"\n              - step:\n                  type: Run\n                  name: myruncontainerimagesmoketest\n                  identifier: myruncontainerimagesmoketest\n                  spec:\n                    shell: Sh\n                    command: echo \"Run Container Image Smoke Test\"\n              - step:\n                  type: Run\n                  name: myscancontainerimagevulnerabilities\n                  identifier: myscancontainerimagevulnerabilities\n                  spec:\n                    shell: Sh\n                    command: echo \"Scan for Container Image Vulnerabilities\"\n              - step:\n                  type: Run\n                  name: mysigncontainerimage\n                  identifier: mysigncontainerimage\n                  spec:\n                    shell: Sh\n                    command: echo \"Sign Container Image\"\n              - step:\n                  type: Run\n                  name: mypublishcontainerimage\n                  identifier: mypublishcontainerimage\n                  spec:\n                    shell: Sh\n                    command: echo \"Publish Container Image to Container Registry\"\n              - step:\n                  type: Run\n                  name: myrunintegrationtest\n                  identifier: myrunintegrationtest\n                  spec:\n                    shell: Sh\n                    command: echo \"Run Integration Tests\"\n          caching:\n            enabled: false\n            paths: []\n"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
