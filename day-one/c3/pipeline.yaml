pipeline:
  name: ${pipeline_name}
  identifier: ${pipeline_identifier}
  projectIdentifier: ${project_identifier}
  orgIdentifier: ${org_identifier}
  tags: {}
  stages:
    - stage:
        name: mybuild
        identifier: mybuild
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: myclonerepo
                      identifier: myclonerepo
                      spec:
                        shell: Sh
                        command: echo "Clone Git Repo on $(uname -a)"
                  - step:
                      type: GitClone
                      name: dogitclone
                      identifier: dogitclone
                      spec:
                        repoName: my-backend-service
                        cloneDirectory: /root/my-backend-service
                        build:
                          type: branch
                          spec:
                            branch: main
              - step:
                  type: Run
                  name: mycompilecode
                  identifier: mycompilecode
                  spec:
                    shell: Sh
                    command: echo "Compile Code on $(uname -a)"
              - step:
                  type: Run
                  name: myrununittest
                  identifier: myrununittest
                  spec:
                    shell: Sh
                    command: echo "Run Unit Tests"
              - step:
                  type: Run
                  name: mycheckcodequality
                  identifier: mycheckcodequality
                  spec:
                    shell: Sh
                    command: echo "Check Code Quality"
              - step:
                  type: Run
                  name: myscansecrets
                  identifier: myscansecrets
                  spec:
                    shell: Sh
                    command: echo "Scan for Leaked Secrets"
              - step:
                  type: Run
                  name: myscancodevulnerabilities
                  identifier: myscancodevulnerabilities
                  spec:
                    shell: Sh
                    command: echo "Scan for Code Vulnerabilities"
              - step:
                  type: Run
                  name: myscansca
                  identifier: myscansca
                  spec:
                    shell: Sh
                    command: echo "Perform Software Composition Analysis (SCA) Scan"
              - step:
                  type: Run
                  name: mybuildpackage
                  identifier: mybuildpackage
                  spec:
                    shell: Sh
                    command: echo "Build Package"
              - step:
                  type: Run
                  name: mypublishpackage
                  identifier: mypublishpackage
                  spec:
                    shell: Sh
                    command: echo "Publish Package to Artifact Repository"
              - step:
                  type: Run
                  name: mybuildcontainerimage
                  identifier: mybuildcontainerimage
                  spec:
                    shell: Sh
                    command: echo "Build Container Image"
              - step:
                  type: Run
                  name: myruncontainerimagesmoketest
                  identifier: myruncontainerimagesmoketest
                  spec:
                    shell: Sh
                    command: echo "Run Container Image Smoke Test"
              - step:
                  type: Run
                  name: myscancontainerimagevulnerabilities
                  identifier: myscancontainerimagevulnerabilities
                  spec:
                    shell: Sh
                    command: echo "Scan for Container Image Vulnerabilities"
              - step:
                  type: Run
                  name: mysigncontainerimage
                  identifier: mysigncontainerimage
                  spec:
                    shell: Sh
                    command: echo "Sign Container Image"
              - step:
                  type: Run
                  name: mypublishcontainerimage
                  identifier: mypublishcontainerimage
                  spec:
                    shell: Sh
                    command: echo "Publish Container Image to Container Registry"
              - step:
                  type: Run
                  name: myrunintegrationtest
                  identifier: myrunintegrationtest
                  spec:
                    shell: Sh
                    command: echo "Run Integration Tests"
          caching:
            enabled: false
            paths: []
  properties:
    ci:
      codebase:
        repoName: my-backend-service
        build: <+input>
